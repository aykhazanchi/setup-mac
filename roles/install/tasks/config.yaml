---
- name: Get bash-it
  git:
    repo: 'https://github.com/Bash-it/bash-it.git'
    dest: "{{ general.user_home }}/.bash_it"
    depth: 1

- name: Install bash-it
  command: "sh {{ general.user_home }}/.bash_it/install.sh --silent"
  ignore_errors: yes

- name: Set bash-it theme to zork
  replace: 
    path: "{{ general.user_home }}/.bash_profile"
    regexp: "BASH_IT_THEME='bobby'"
    replace: "BASH_IT_THEME='zork'"
    
- name: Create new .bashrc
  shell: |
    touch "{{ general.user_home }}"/.bashrc
    echo "#!/usr/bin/env bash" >> "{{ general.user_home }}"/.bashrc
    echo "" >> "{{ general.user_home }}"/.bashrc
    echo "#!/usr/bin/env bash" >> "{{ general.user_home }}"/.bash_profile_new
    echo "" >> "{{ general.user_home }}"/.bash_profile_new
    echo "if [ -f {{ general.user_home }}/.bashrc ]; then" >> "{{ general.user_home }}"/.bash_profile_new
    echo "  . {{ general.user_home }}/.bashrc" >> "{{ general.user_home }}"/.bash_profile_new
    echo "fi" >> "{{ general.user_home }}"/.bash_profile_new
    echo "" >> "{{ general.user_home }}"/.bash_profile_new
  args:
    creates: "{{ general.user_home }}/.bashrc"

- name: Remove extra shebang already in .bash_profile
  replace:
    path: "{{ general.user_home }}/.bash_profile"
    regexp: "#!/usr/bin/env bash\n\n"
    replace: ""

- name: Create new .bash_profile sourcing .bashrc
  shell: | 
    cat "{{ general.user_home }}"/.bash_profile >> "{{ general.user_home }}"/.bash_profile_new
    rm "{{ general.user_home }}"/.bash_profile
    mv "{{ general.user_home }}"/.bash_profile_new "{{ general.user_home }}"/.bash_profile
    source "{{ general.user_home }}"/.bash_profile

- name: Get tgenv
  git:
    repo: 'https://github.com/cunymatthieu/tgenv.git'
    dest: '{{ general.user_home }}/.tgenv'

- name: Set PATHs and source .bashrc
  shell: |
    echo '# Bash autocomplete setup' >> "{{ general.user_home }}"/.bashrc
    echo '[ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion' >> "{{ general.user_home }}"/.bashrc
    echo '[ -f $(brew --prefix)/etc/profile.d/autojump.sh ] && . $(brew --prefix)/etc/profile.d/autojump.sh' >> "{{ general.user_home }}"/.bashrc
    echo 'export PATH="$HOME/.tgenv/bin:$PATH"' >> "{{ general.user_home }}"/.bashrc
    echo 'export PATH="$HOME/.tfenv/bin:$PATH"' >> "{{ general.user_home }}"/.bashrc
    echo 'export PATH="$HOME/.jenv/bin:$PATH"' >> "{{ general.user_home }}"/.bashrc
    echo 'alias weather="curl wttr.in?0"' >> "{{ general.user_home }}"/.bashrc
    echo 'alias my-ip-int="ifconfig -l | xargs -n1 ipconfig getifaddr"' >> "{{ general.user_home }}"/.bashrc
    echo 'alias my-ip-ext="curl ifconfig.me"' >> "{{ general.user_home }}"/.bashrc
    echo 'export PATH="$(pyenv root)/shims:$PATH"' >> "{{ general.user_home }}"/.bashrc
    echo 'eval "$(pyenv init -)"' >> "{{ general.user_home }}"/.bashrc
    echo 'ssh-add /Users/akzn/workspace/keys/akzn' >> "{{ general.user_home }}"/.bashrc
    echo '# heroku autocomplete setup' >> "{{ general.user_home }}"/.bashrc
    echo 'HEROKU_AC_BASH_SETUP_PATH=/Users/akzn/Library/Caches/heroku/autocomplete/bash_setup && test -f $HEROKU_AC_BASH_SETUP_PATH && source $HEROKU_AC_BASH_SETUP_PATH;' >> "{{ general.user_home }}"/.bashrc
    source "{{ general.user_home }}"/.bashrc

- name: Setup tgenv
  command: "{{ general.user_home }}/.tgenv/bin/tgenv install 0.21.9"
  ignore_errors: yes

- name: Setup tfenv
  command: "tfenv install 0.12.18"

- name: Setup jenv
  shell: |
    echo 'eval "$(jenv init -)"' >> "{{ general.user_home }}"/.bashrc
    jenv enable-plugin export
    jenv add $(/usr/libexec/java_home)

- name: Create .ssh if it doesn't exist
  file:
    state: directory
    path: "{{ general.user_home }}/.ssh"
    mode: 0700

- name: setup ssh config
  shell: |
    touch {{ general.user_home }}/.ssh/config
    echo 'Host *' > {{ general.user_home }}/.ssh/config
    echo '  AddKeysToAgent yes' >> {{ general.user_home }}/.ssh/config
    echo '  UseKeychain yes' >> {{ general.user_home }}/.ssh/config
    echo '  CanonicalizeHostName Always' >> {{ general.user_home }}/.ssh/config
    echo '  ServerAliveInterval 60' >> {{ general.user_home }}/.ssh/config
    eval "$(ssh-agent -s)"
  args:
    creates: "{{ general.user_home }}/.ssh/config"
